name: Python CI/CD Pipeline

on: [push, pull_request]

permissions:
  contents: write
  issues: write


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install poetry
        POETRY_VIRTUALENVS_CREATE=false poetry install

    - name: Pre-commit checks
      run: |
        PYTHONFAULTHANDLER=1 pre-commit run --all-files

    - name: Run pytest
      run: |
        pytest

    - name: Run cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test

  build-python-wheels:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        architecture: [x86-64, arm64]

    steps:

      - name: Display Architecture
        run: uname -a

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install poetry
          POETRY_VIRTUALENVS_CREATE=false poetry install

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Create package
        run: |
          poetry build --format=wheel

      - name: Upload dist folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-folder-${{ matrix.architecture }}
          path: ./dist

  release:
    runs-on: ubuntu-latest
    needs:
        - build-python-wheels

    steps:

    - name: Download x86-64 dist folder
      uses: actions/download-artifact@v3
      with:
        name: dist-folder-x86-64
        path: ./dist/x86-64

    - name: Download arm64 dist folder
      uses: actions/download-artifact@v3
      with:
        name: dist-folder-arm64
        path: ./dist/arm64

    - name: Merge dist folders
      run: |
        mkdir -p merged-dist
        cp ./dist/x86-64/* merged-dist/
        cp ./dist/arm64/* merged-dist/

    - name: Zip release
      run: |
        zip -r dist.zip merged-dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist.zip
        asset_name: dist.zip
        asset_content_type: application/zip
